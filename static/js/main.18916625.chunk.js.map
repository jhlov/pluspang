{"version":3,"sources":["components/game/Cell.js","scripts/RankHelper.js","components/game/Game.js","assets/howto.png","components/howto/HowTo.js","components/menu/Menu.js","components/rank/Rank.js","components/app/App.js","reportWebVitals.js","index.js"],"names":["Cell","value","index","clicked","onClickCell","onEnterCell","onTouchMove","onMouseUp","isAnswer","className","classNames","onMouseDown","isBrowser","onMouseEnter","onTouchStart","e","onTouchEnd","RankHelper","MAX_RANKER","getRecordList","gameType","a","axios","get","data","arr","Object","entries","key","push","name","record","sort","b","slice","Game","history","useState","numberList","setNumberList","boardRef","useRef","Date","now","startTime","curTime","setCurTime","isDrag","setIsDrag","dragCellList","setDragCellList","answerCellList","setAnswerCellList","targetNumber","setTargetNumber","recordList","setRecordList","bestRecord","setBestRecord","score","setScore","scoreRef","recordListRef","current","useParams","useEffect","console","log","Array","i","length","getCellNumber","getTargetNumber","fetchData","timerId","setInterval","updateTime","clearInterval","isNewRecord","deltaTime","newTime","Math","max","prompt","localStorage","getItem","find","patch","setItem","alert","numberWithCommas","parseInt","random","min","newNumber","floor","getDragCellSum","reduce","accumulator","currentValue","processDrag","includes","checkAnswer","useCallback","setTimeout","newTargetNum","newNumberList","toFixed","parseFloat","x","touches","clientX","y","clientY","children","child","childX","getBoundingClientRect","width","childY","toString","replace","ref","map","number","HowTo","src","howto","Menu","to","Rank","oneto20RankList","set1to20RankList","randomRankList","setRandomRankList","_oneto20RankList","_randomRankList","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18916625.chunk.js","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport { isBrowser } from \"react-device-detect\";\n\nconst Cell = ({\n  value,\n  index,\n  clicked,\n  onClickCell,\n  onEnterCell,\n  onTouchMove,\n  onMouseUp,\n  isAnswer\n}) => {\n  return (\n    <div\n      className={classNames(`cell value${value} none-drag`, {\n        clicked,\n        isAnswer\n      })}\n      onMouseDown={() => {\n        if (isBrowser) {\n          onClickCell(index);\n        }\n      }}\n      onMouseEnter={() => {\n        if (isBrowser) {\n          onEnterCell(index);\n        }\n      }}\n      onTouchStart={() => onClickCell(index)}\n      onTouchMove={(e) => onTouchMove(e)}\n      onTouchEnd={onMouseUp}\n    >\n      {value}\n    </div>\n  );\n};\n\nexport default Cell;\n","import axios from \"axios\";\n\nconst MAX_RANKER = 10; // 랭킹 저장 수\n\nconst RankHelper = {\n  MAX_RANKER: 10, // 랭킹 저장 수\n  getRecordList: async gameType => {\n    const data = await axios.get(\n      `https://pluspang-default-rtdb.firebaseio.com/${gameType}.json`\n    );\n\n    if (!data.data) {\n      return [];\n    }\n\n    let arr = [];\n    for (const [key, value] of Object.entries(data.data)) {\n      arr.push({\n        name: key,\n        record: value\n      });\n    }\n\n    if (gameType === \"1to20\") {\n      arr = arr.sort((a, b) => a.record - b.record);\n    } else {\n      arr = arr.sort((a, b) => b.record - a.record);\n    }\n\n    return arr.slice(0, MAX_RANKER);\n  }\n};\n\nexport default RankHelper;\n","import axios from \"axios\";\nimport Cell from \"components/game/Cell\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport RankHelper from \"scripts/RankHelper\";\nimport \"./Game.scss\";\n\nconst Game = ({ history }) => {\n  const LAST_TARGET_1TO20 = 20;\n  const RANDOM_TIME = 60;\n\n  // 숫자판\n  const [numberList, setNumberList] = useState([]);\n\n  // 보드 ref\n  const boardRef = useRef();\n\n  // 시간\n  const [startTime, setStartTime] = useState(Date.now());\n  const [curTime, setCurTime] = useState(0);\n\n  // 현재 드래그 중인지 체크\n  const [isDrag, setIsDrag] = useState(false);\n\n  // 현재 드래그 중인 cell 인덱스 리스트\n  const [dragCellList, setDragCellList] = useState([]);\n\n  // 정답을 맞춘 셀 리스트\n  const [answerCellList, setAnswerCellList] = useState([]);\n\n  // 목표 숫자\n  const [targetNumber, setTargetNumber] = useState(0);\n\n  // 점수\n  const [recordList, setRecordList] = useState([]);\n  const [bestRecord, setBestRecord] = useState(\"-\");\n  const [score, setScore] = useState(0); // random 일 경우만\n  const scoreRef = useRef(score);\n  const recordListRef = useRef(recordList);\n  scoreRef.current = score;\n  recordListRef.current = recordList;\n\n  let { gameType } = useParams();\n\n  // 최초 설정\n  useEffect(() => {\n    console.log(\"mounted\");\n\n    let arr = new Array(25);\n    for (let i = 0; i < arr.length; ++i) {\n      arr[i] = getCellNumber();\n    }\n    setNumberList(arr);\n    setTargetNumber(getTargetNumber());\n\n    // recordList\n    async function fetchData() {\n      const recordList = await RankHelper.getRecordList(gameType);\n      setRecordList(recordList);\n      setBestRecord(0 < recordList.length ? recordList[0].record : \"-\");\n    }\n    fetchData();\n\n    let timerId = setInterval(updateTime, 50);\n\n    return function cleanup() {\n      clearInterval(timerId);\n    };\n  }, []);\n\n  const isNewRecord = record => {\n    if (gameType === \"1to20\") {\n      return (\n        recordList.length < RankHelper.MAX_RANKER ||\n        record < recordList[recordList.length - 1].record\n      );\n    } else {\n      return (\n        recordList.length < RankHelper.MAX_RANKER ||\n        recordList[recordList.length - 1].record < record\n      );\n    }\n  };\n\n  const updateTime = () => {\n    const deltaTime = (Date.now() - startTime) / 1000;\n    if (gameType === \"1to20\") {\n      setCurTime(deltaTime);\n    } else {\n      let newTime = Math.max(0, RANDOM_TIME - deltaTime);\n      setCurTime(newTime);\n\n      // 종료 처리\n      if (newTime === 0) {\n        if (0 < scoreRef.current && isNewRecord(scoreRef.current)) {\n          const name = prompt(\n            `기록갱신\\n\\n${scoreRef.current}점!!\\n\\n이름을 등록해 주세요`,\n            localStorage.getItem(\"name\") ?? \"\"\n          );\n\n          if (name) {\n            if (\n              !recordListRef.current.find(\n                e => e.name === name && scoreRef.current < e.record\n              )\n            ) {\n              axios.patch(\n                `https://pluspang-default-rtdb.firebaseio.com/${gameType}.json`,\n                {\n                  [name]: scoreRef.current\n                }\n              );\n            }\n\n            localStorage.setItem(\"name\", name);\n          }\n        } else {\n          alert(`GAME OVER!!\\n\\n${numberWithCommas(scoreRef.current)}점!!`);\n        }\n\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const getCellNumber = () => {\n    // 작은 숫자가 많이 나오도록\n    const arr = [1, 1, 1, 2, 2, 3, 3, 4, 4];\n    return arr[parseInt(Math.random() * arr.length)];\n  };\n\n  const getTargetNumber = () => {\n    if (gameType === \"1to20\") {\n      return targetNumber + 1;\n    } else {\n      let min = 0;\n      let max = 0;\n\n      if (score < 2000) {\n        min = 4;\n        max = 9;\n      } else if (score < 4000) {\n        min = 5;\n        max = 10;\n      } else if (score < 6000) {\n        min = 5;\n        max = 13;\n      } else if (score < 8000) {\n        min = 6;\n        max = 14;\n      } else {\n        min = 6;\n        max = 15;\n      }\n\n      while (true) {\n        const newNumber = Math.floor(Math.random() * (max - min + 1)) + min;\n        if (newNumber !== targetNumber) {\n          return newNumber;\n        }\n      }\n    }\n  };\n\n  const getDragCellSum = () => {\n    return dragCellList.reduce(\n      (accumulator, currentValue) => accumulator + numberList[currentValue],\n      0\n    );\n  };\n\n  const processDrag = index => {\n    if (!dragCellList.includes(index)) {\n      console.log(\"processDrag\", index);\n      setDragCellList([index, ...dragCellList]);\n    }\n  };\n\n  /**\n   * 정답이 맞는지 확인 및 처리\n   */\n  const checkAnswer = useCallback(() => {\n    if (targetNumber === getDragCellSum()) {\n      console.log(\"정답\");\n\n      // 정답 리스트 업데이트\n      setAnswerCellList([...dragCellList]);\n      setTimeout(() => {\n        setAnswerCellList([]);\n      }, 200);\n\n      // 타겟 넘버 업데이트\n      const newTargetNum = getTargetNumber();\n      setTargetNumber(newTargetNum);\n\n      // 맞힌 숫자 변경\n      const newNumberList = [...numberList];\n      for (let i = 0; i < dragCellList.length; ++i) {\n        newNumberList[dragCellList[i]] = getCellNumber();\n      }\n      setNumberList(newNumberList);\n\n      if (gameType === \"1to20\") {\n        // 종료 체크\n        if (LAST_TARGET_1TO20 < newTargetNum) {\n          // 기록\n          if (isNewRecord(curTime.toFixed(2))) {\n            const name = prompt(\n              `기록갱신\\n\\n${curTime.toFixed(2)}초!!\\n\\n이름을 등록해 주세요`,\n              localStorage.getItem(\"name\") ?? \"\"\n            );\n\n            if (name) {\n              if (\n                !recordList.find(e => e.name === name && e.record < curTime)\n              ) {\n                axios.patch(\n                  `https://pluspang-default-rtdb.firebaseio.com/${gameType}.json`,\n                  {\n                    [name]: parseFloat(curTime.toFixed(2))\n                  }\n                );\n              }\n\n              localStorage.setItem(\"name\", name);\n            }\n          } else {\n            alert(`GAME OVER!!\\n\\n${curTime.toFixed(2)}초!!`);\n          }\n\n          history.push(\"/\");\n        }\n      } else {\n        setScore(score + 100 * dragCellList.length);\n      }\n    } else {\n      console.log(\"오답\");\n    }\n  });\n\n  const onClickCell = useCallback(index => {\n    console.log(\"onClickCell\", index);\n    setIsDrag(true);\n    processDrag(index);\n  }, []);\n\n  const onEnterCell = useCallback(\n    index => {\n      if (isDrag) {\n        console.log(\"onEnterCell\", index);\n        processDrag(index);\n      }\n    },\n    [isDrag, dragCellList]\n  );\n\n  const onTouchMove = useCallback(e => {\n    if (isDrag) {\n      const x = e.touches[0].clientX;\n      const y = e.touches[0].clientY;\n\n      for (let i = 0; i < boardRef.current.children.length; ++i) {\n        const child = boardRef.current.children[i];\n        const childX = child.getBoundingClientRect().x;\n        const width = child.getBoundingClientRect().width;\n        const childY = child.getBoundingClientRect().y;\n\n        if (\n          childX <= x &&\n          x <= childX + width &&\n          childY < y &&\n          y < childY + width\n        ) {\n          processDrag(i);\n          break;\n        }\n      }\n    }\n  });\n\n  const onMouseUp = () => {\n    console.log(\"onMouseUp\");\n    console.log(dragCellList, getDragCellSum());\n\n    // 정답 체크\n    checkAnswer();\n\n    setIsDrag(false);\n    setDragCellList([]);\n  };\n\n  const numberWithCommas = x => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  return (\n    <div onMouseUp={onMouseUp}>\n      {/* 상단 */}\n      <div className=\"card card-number mb-20 none-drag\">\n        <div className=\"card-header\">TARGET NUMBER</div>\n        <div className=\"card-body\">{targetNumber}</div>\n      </div>\n      <div className=\"d-flex justify-content-flex-end\">\n        <div className=\"card none-drag\">\n          <div className=\"card-header\">TIME</div>\n          <div className=\"card-body\">{curTime.toFixed(2)}</div>\n        </div>\n        {gameType === \"1to20\" && (\n          <div className=\"card none-drag\">\n            <div className=\"card-header\">BEST-TIME</div>\n            <div className=\"card-body\">{bestRecord}</div>\n          </div>\n        )}\n        {gameType === \"random\" && (\n          <div className=\"card none-drag\">\n            <div className=\"card-header\">SCORE</div>\n            <div className=\"card-body\">{numberWithCommas(score)}</div>\n          </div>\n        )}\n        {gameType === \"random\" && (\n          <div className=\"card none-drag\">\n            <div className=\"card-header\">\n              BEST\n              <br />\n              SCORE\n            </div>\n            <div className=\"card-body\">{bestRecord}</div>\n          </div>\n        )}\n      </div>\n\n      {/* 하단 */}\n      <div className=\"board-wrapper1\">\n        <div className=\"board-wrapper2\">\n          <div className=\"board\" ref={boardRef}>\n            {numberList.map((number, index) => (\n              <Cell\n                value={number}\n                key={index}\n                index={index}\n                clicked={dragCellList.includes(index)}\n                isAnswer={answerCellList.includes(index)}\n                onClickCell={onClickCell}\n                onEnterCell={onEnterCell}\n                onTouchMove={onTouchMove}\n                onMouseUp={onMouseUp}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","export default __webpack_public_path__ + \"static/media/howto.f9e9d9e5.png\";","import howto from \"assets/howto.png\";\nimport React from \"react\";\n\nconst HowTo = () => {\n  return (\n    <div>\n      <img src={howto} className=\"w-100 h-100\" />\n    </div>\n  );\n};\n\nexport default HowTo;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Menu.scss\";\n\nconst Menu = () => {\n  return (\n    <div className=\"d-flex flex-column align-items-center justify-content-center h-100\">\n      <div className=\"title none-drag\">PLUSPANG</div>\n      <Link to=\"/game/1to20\" className=\"btn menu-item none-drag\">\n        1 TO 20\n      </Link>\n      <Link to=\"/game/random\" className=\"btn menu-item none-drag\">\n        RANDOM\n      </Link>\n      <Link to=\"/rank\" className=\"btn menu-item none-drag\">\n        RANK\n      </Link>\n      <Link to=\"/howto\" className=\"btn menu-item none-drag\">\n        HOW TO\n      </Link>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport RankHelper from \"scripts/RankHelper\";\nimport \"./Rank.scss\";\n\nconst Rank = () => {\n  const [oneto20RankList, set1to20RankList] = useState([]);\n  const [randomRankList, setRandomRankList] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const _oneto20RankList = await RankHelper.getRecordList(\"1to20\");\n      set1to20RankList(_oneto20RankList);\n\n      const _randomRankList = await RankHelper.getRecordList(\"random\");\n      setRandomRankList(_randomRankList);\n    }\n    fetchData();\n  }, []);\n\n  const numberWithCommas = x => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  return (\n    <div className=\"px-40\">\n      <h2>1 TO 20</h2>\n      <ul className=\"mb-20\">\n        {oneto20RankList.map((e, index) => (\n          <li className=\"d-flex\">\n            <span>{index + 1}. </span>\n            <span className=\"name\"> {e.name}</span>{\" \"}\n            <span className=\"ml-auto\">{e.record}초</span>\n          </li>\n        ))}\n        {oneto20RankList.length === 0 && <p>기록이 없습니다.</p>}\n      </ul>\n\n      <h2>RANDOM</h2>\n      <ul className=\"mb-20\">\n        {randomRankList.map((e, index) => (\n          <li className=\"d-flex\">\n            {index + 1}. <span className=\"name ml-20\"> {e.name}</span>{\" \"}\n            <span className=\"ml-auto\">{numberWithCommas(e.record)}점</span>\n          </li>\n        ))}\n        {randomRankList.length === 0 && <p>기록이 없습니다.</p>}\n      </ul>\n\n      <div className=\"btn-group\">\n        <Link to=\"/\" className=\"btn mb-8\">\n          메뉴\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Rank;\n","import Game from \"components/game/Game\";\nimport HowTo from \"components/howto/HowTo\";\nimport Menu from \"components/menu/Menu\";\nimport Rank from \"components/rank/Rank\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport \"styles/style.scss\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <HashRouter>\n          <Route path=\"/\" component={Menu} exact={true} />\n          <Route path=\"/game/:gameType\" component={Game} />\n          <Route path=\"/rank\" component={Rank} />\n          <Route path=\"/howto\" component={HowTo} />\n        </HashRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./components/app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}