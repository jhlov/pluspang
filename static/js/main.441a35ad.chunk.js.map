{"version":3,"sources":["components/game/Cell.js","components/game/Game.js","components/menu/Menu.js","components/rank/Rank.js","components/app/App.js","reportWebVitals.js","index.js"],"names":["Cell","value","index","clicked","onClickCell","onEnterCell","className","classNames","onMouseDown","onMouseEnter","Game","useState","numberList","setNumberList","isDrag","setIsDrag","dragCellList","setDragCellList","targetNumber","setTargetNumber","useEffect","arr","Array","i","length","getCellNumber","getTargetNumber","parseInt","Math","random","processDrag","includes","console","log","useCallback","onMouseUp","reduce","accumulator","currentValue","map","number","Menu","to","Rank","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.441a35ad.chunk.js","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n\nconst Cell = ({ value, index, clicked, onClickCell, onEnterCell }) => {\n  return (\n    <div\n      className={classNames(\"cell\", { clicked })}\n      onMouseDown={() => onClickCell(index)}\n      onMouseEnter={() => onEnterCell(index)}\n    >\n      {value}\n    </div>\n  );\n};\n\nexport default Cell;\n","import \"./Game.scss\";\n\nimport React, { useCallback, useEffect, useState } from \"react\";\n\nimport Cell from \"components/game/Cell\";\n\nconst Game = () => {\n  // 숫자판\n  const [numberList, setNumberList] = useState([]);\n\n  // 현재 드래그 중인지 체크\n  const [isDrag, setIsDrag] = useState(false);\n\n  // 현재 드래그 중인 cell 인덱스 리스트\n  const [dragCellList, setDragCellList] = useState([]);\n\n  // 목표 숫자\n  const [targetNumber, setTargetNumber] = useState(\"\");\n\n  // 최초 설정\n  useEffect(() => {\n    let arr = new Array(25);\n    for (let i = 0; i < arr.length; ++i) {\n      arr[i] = getCellNumber();\n    }\n    setNumberList(arr);\n    setTargetNumber(getTargetNumber());\n  }, []);\n\n  const getCellNumber = () => {\n    // 작은 숫자가 많이 나오도록\n    const arr = [1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 4];\n    return arr[parseInt(Math.random() * arr.length)];\n  };\n\n  const getTargetNumber = () => {\n    return parseInt(Math.random() * 5) + 1;\n  };\n\n  const getDragCellSum = () => {\n    return dragCellList.reduce(\n      (accumulator, currentValue) => accumulator + numberList[currentValue],\n      0\n    );\n  };\n\n  const processDrag = (index) => {\n    if (!dragCellList.includes(index)) {\n      console.log(\"processDrag\", index);\n      setDragCellList([index, ...dragCellList]);\n    }\n  };\n\n  const onClickCell = useCallback((index) => {\n    console.log(\"onClickCell\", index);\n    setIsDrag(true);\n    processDrag(index);\n  }, []);\n\n  const onEnterCell = useCallback(\n    (index) => {\n      if (isDrag) {\n        console.log(\"onEnterCell\", index);\n        processDrag(index);\n      }\n    },\n    [isDrag, dragCellList]\n  );\n\n  const onMouseUp = () => {\n    console.log(\"onMouseUp\");\n    console.log(dragCellList, getDragCellSum());\n\n    // TODO: 정답 체크\n\n    setIsDrag(false);\n    setDragCellList([]);\n  };\n\n  return (\n    <div onMouseUp={onMouseUp}>\n      {/* 상단 */}\n      <div className=\"d-flex\">\n        <div className=\"flex-4\">\n          <div className=\"card\">\n            <div className=\"card-header\">TARGET NUMBER</div>\n            <div className=\"card-body\">{targetNumber}</div>\n          </div>\n        </div>\n\n        <div className=\"flex-1\">\n          <div className=\"card\">\n            <div className=\"card-header\">TIME</div>\n            <div className=\"card-body\">10.22</div>\n          </div>\n          <div className=\"card\">\n            <div className=\"card-header\">BEST</div>\n            <div className=\"card-body\">10.22</div>\n          </div>\n        </div>\n      </div>\n\n      {/* 하단 */}\n      <div className=\"board mt-40\">\n        {numberList.map((number, index) => (\n          <Cell\n            value={number}\n            key={index}\n            index={index}\n            clicked={dragCellList.includes(index)}\n            onClickCell={onClickCell}\n            onEnterCell={onEnterCell}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","import \"./Menu.scss\";\n\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\n\nconst Menu = () => {\n  return (\n    <div className=\"d-flex flex-column align-items-center justify-content-center h-100\">\n      <div className=\"title\">PLUSPANG</div>\n      <Link to=\"/game\" className=\"btn menu-item\">\n        1 to 20\n      </Link>\n      <Link to=\"/game\" className=\"btn menu-item\">\n        random\n      </Link>\n      <Link to=\"/rank\" className=\"btn menu-item\">\n        rank\n      </Link>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\n\nconst Rank = () => {\n  return <div>랭크</div>;\n};\n\nexport default Rank;\n","import \"styles/style.scss\";\nimport \"./App.scss\";\n\nimport Game from \"components/game/Game\";\nimport Menu from \"components/menu/Menu\";\nimport Rank from \"components/rank/Rank\";\nimport { Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Route path=\"/\" component={Menu} exact={true} />\n        <Route path=\"/game\" component={Game} />\n        <Route path=\"/rank\" component={Rank} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./components/app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}